{"version":3,"sources":["webpack:///./src/App.js","webpack:///./src/index.js"],"names":["locationOptions","name","label","react_default","a","createElement","index_es","id","defaultMessage","capitalize","string","charAt","toUpperCase","slice","describeSoftpack","pack","title","packages","map","item","version","replace","RegExp","className","htmlFor","App","props","_classCallCheck","this","_this","_possibleConstructorReturn","_Component","call","state","Object","assign","actions","location","configId","osimage","administration","softpack","isOrderActive","total","configOptions","imageOptions","administrationOptions","softpackOptions","initialStates","componentDidUpdate","prevProps","prevState","snapshot","buildAdministration","buildSoftpacks","componentDidMount","_this2","images","keys","osImages","key","image","disabled","setState","configs","getCurrentImage","_this3","values","forEach","administrations","panel","rawSoftpacks","imageName","hasOwnProperty","currentImage","push","unionPacks","filter","index","self","findIndex","t","place","handleLocationChange","handleSelectConfig","find","conf","parseInt","price","handleImage","handleAdministration","currentState","handleSoftPack","handleLabelChange","evt","target","value","render","_this4","main","orderPanel","length","config","idx","ConfigCard","_extends","onSelectConfig","fullConfig","_ref3","_ref4","_ref5","type","onChange","token","RadioList","options","current","onInputChange","isSideBar","currency","language","action","method","LocationSwitcher","locations","currentLocation","onLocationChange","loc","style","marginTop","Component","handleChange","currentTarget","dataset","data-location","onClick","descr","_ref6","_ref7","_ref8","SelectedOption","input","Software","_ref9","toLocaleString","_ref10","data-config","_ref11","_ref12","software","_ref13","_ref14","_objectWithoutProperties","option","indexOf","reduce","accumulator","useEffect","toLowerCase","checked","_ref15","addLocaleData","en","ru","locale","window","hipanel_order_server","messages","text.header","text.paragraph","nl","us","order","select","select_locaction","no_configurations","src_App","document","querySelector"],"mappings":"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","file":"app.f8419195.js","sourcesContent":["'use strict';\n\nimport React, {Component, useEffect} from 'react'\nimport {FormattedMessage} from 'react-intl';\n\nconst locationOptions = [\n    {\n        name: 'nl',\n        label: <FormattedMessage id='nl' defaultMessage='Netherlands'/>\n    },\n    {\n        name: 'us',\n        label: <FormattedMessage id='us' defaultMessage='USA'/>\n    },\n];\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst describeSoftpack = pack => {\n    let title = '';\n    if (!pack) {\n        return null;\n    }\n\n    pack.packages.map(item => {\n        title += `${item.name} ${item.version} + `;\n    });\n\n    return title.replace(new RegExp(\"[\\\\s+]*$\"), '');\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = Object.assign({}, {\n            actions: null,\n            location: 'usa',\n            configId: null,\n            label: '',\n            osimage: null,\n            administration: null,\n            softpack: null,\n            isOrderActive: false,\n            total: 0,\n            configOptions: [],\n            imageOptions: [],\n            administrationOptions: [],\n            softpackOptions: [],\n        }, props.initialStates);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.osimage != this.state.osimage) {\n            this.buildAdministration();\n            this.buildSoftpacks();\n        }\n    }\n\n    componentDidMount(prevProps, prevState, snapshot) {\n        let images = Object.keys(this.props.osImages).map(key => {\n            const image = this.props.osImages[key];\n\n            return {\n                name: image.name,\n                title: image.title,\n                disabled: false\n            };\n        });\n        this.setState({\n            configOptions: this.props.configs,\n            imageOptions: images,\n        }, () => {\n            this.buildAdministration();\n            this.buildSoftpacks();\n        });\n    }\n\n    getCurrentImage() {\n        let image = null;\n        if (this.state.osimage) {\n            Object.values(this.props.osImages).forEach(item => {\n                if (item.name === this.state.osimage) {\n                    image = item;\n                }\n            });\n        }\n\n        return image;\n    }\n\n    buildAdministration() {\n        const image = this.getCurrentImage();\n        let administrations = [\n            {\n                name: 'managed',\n                title: 'Managed',\n                disabled: image === null ? false : image.softpack && image.softpack.panel === 'HiPanel'\n            },\n            {\n                name: 'unmanaged',\n                title: 'Unmanaged',\n                disabled: image === null ? false : image.softpack === null || image.softpack.panel !== 'HiPanel'\n            },\n        ];\n        this.setState({\n            administrationOptions: administrations,\n        });\n    }\n\n    buildSoftpacks() {\n        let rawSoftpacks = [];\n        for (let imageName in this.props.osImages) {\n            const image = this.props.osImages.hasOwnProperty(imageName) ? this.props.osImages[imageName] : null,\n                currentImage = this.getCurrentImage();\n            if (image && image.softpack) {\n                rawSoftpacks.push({\n                    name: image.softpack.name,\n                    title: image.softpack.name.toUpperCase(),\n                    disabled: !(currentImage && currentImage.softpack && currentImage.softpack.name === image.softpack.name),\n                })\n            } else {\n                rawSoftpacks.push({\n                    name: 'clear',\n                    title: 'No softpack',\n                    disabled: false,\n                })\n            }\n        }\n        const unionPacks = rawSoftpacks.filter((item, index, self) => index === self.findIndex((t) => (\n                t.place === item.place && t.name === item.name\n            ))\n        );\n\n        this.setState({\n            softpackOptions: Object.assign(unionPacks),\n        });\n    }\n\n    handleLocationChange(location) {\n        this.setState({\n            location: location,\n            configId: null,\n            label: '',\n            osimage: null,\n            administration: null,\n            softpack: null,\n            isOrderActive: false,\n        });\n    }\n\n    handleSelectConfig(configId) {\n        this.setState({\n            configId: configId,\n            label: '',\n            osimage: null,\n            administration: null,\n            softpack: null,\n            isOrderActive: false,\n            total: this.state.configOptions[this.state.location].find(conf => parseInt(conf.id) === parseInt(configId)).price,\n        });\n    }\n\n    handleImage(osimage) {\n        this.setState({osimage});\n    }\n\n    handleAdministration(administration) {\n        let total = this.state.total;\n        const currentState = this.state.administration;\n        if (administration === 'managed' && (currentState === 'unmanaged' || currentState == null)) {\n            total += 100;\n        } else if (administration === 'unmanaged' && currentState === 'managed') {\n            total -= 100;\n        }\n        this.setState({administration, total});\n    }\n\n    handleSoftPack(softpack) {\n        this.setState({softpack});\n    }\n\n    handleLabelChange(evt) {\n        this.setState({label: evt.target.value});\n    }\n\n    render() {\n        const sideMargin = {marginTop: '1em'};\n        let main = (<div className=\"alert alert-warning text-center\"><FormattedMessage id='select_locaction'\n                                                                                       defaultMessage='Select location'/>\n            </div>),\n            orderPanel = '',\n            location = this.state.location, configId = this.state.configId, isOrderActive = this.state.isOrderActive;\n\n        if (location) {\n            if (Object.keys(this.state.configOptions).length && this.state.configOptions[location].length) {\n                main = (this.state.configOptions[location].map((config, idx) => (\n                    <div className=\"col-md-4\" key={idx}>\n                        <ConfigCard config={config} {...this.state} location={location}\n                                    onSelectConfig={evt => this.handleSelectConfig(evt)}/>\n                    </div>\n                )));\n            } else {\n                main = (<div className=\"alert alert-warning text-center\">\n                    <FormattedMessage id='no_configurations' defaultMessage='No configurations found'/>\n                </div>);\n            }\n        }\n\n        if (this.state.osimage && this.state.administration && this.state.softpack) {\n            isOrderActive = true;\n        }\n\n        if (location && configId) {\n            const fullConfig = this.state.configOptions[location].find(item => parseInt(item.id) === parseInt(configId));\n            main = <fieldset className=\"col-md-9\">\n\n                <h3>\n                    <FormattedMessage id='text.header'/>\n                </h3>\n                <p>\n                    <FormattedMessage id='text.paragraph'/>\n                </p>\n\n                <div className=\"row\">\n                    <div\n                        className=\"col-md-9\">\n                        <div\n                            className=\"form-group\">\n                            <label\n                                htmlFor=\"label\"><FormattedMessage id='label'\n                                                                  defaultMessage='Label'/></label>\n                            <input type=\"text\" className=\"form-control\" name='label' id=\"label\"\n                                   value={this.state.value}\n                                   onChange={evt => this.handleLabelChange(evt)}/>\n                        </div>\n                    </div>\n                </div>\n\n                <input type=\"hidden\" id={this.props.token.name} name={this.props.token.name} value={this.props.token.value}/>\n\n                <input type=\"hidden\" id=\"object_id\" name=\"object_id\" value={configId}/>\n\n                <RadioList label=\"osimage\" options={this.state.imageOptions}\n                           current={this.state.osimage}\n                           onInputChange={value => this.handleImage(value)}/>\n\n                <RadioList label=\"administration\" options={this.state.administrationOptions}\n                           current={this.state.administration}\n                           onInputChange={value => this.handleAdministration(value)}/>\n\n                <RadioList label=\"softpack\" options={this.state.softpackOptions}\n                           current={this.state.softpack}\n                           onInputChange={value => this.handleSoftPack(value)}/>\n\n            </fieldset>;\n            orderPanel = <ConfigCard config={fullConfig}\n                                     imageOptions={this.state.imageOptions}\n                                     administrationOptions={this.state.administrationOptions}\n                                     softpackOptions={this.state.softpackOptions}\n                                     isSideBar={true}\n                                     isOrderActive={isOrderActive}\n                                     currency={this.state.currency}\n                                     language={this.state.language}\n                                     label={this.state.label}\n                                     osimage={this.state.osimage}\n                                     administration={this.state.administration}\n                                     softpack={this.state.softpack}\n                                     location={location}\n                                     total={this.state.total}\n                                     currentImage={this.getCurrentImage()}/>;\n        }\n\n        return (\n            <form id=\"hipanel-server-order\" action={this.state.action} method=\"POST\">\n                <div className=\"row\">\n                    <div className=\"col-md-9\">\n                        <div className=\"row\">\n                            {main}\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <LocationSwitcher locations={locationOptions} currentLocation={this.state.location}\n                                                  onLocationChange={loc => this.handleLocationChange(loc)}/>\n                            </div>\n                            <div className=\"col-md-12\" style={sideMargin}>\n                                {orderPanel}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction LocationSwitcher(props) {\n    const handleChange = evt => {\n        props.onLocationChange(evt.currentTarget.dataset.location);\n    };\n\n    return (\n        <div className=\"btn-group btn-group-justified\">\n            {props.locations.map((location, idx) => (\n                <label className={\"btn btn-default \" + (location.name === props.currentLocation ? 'active' : '')}\n                       key={idx} data-location={location.name} onClick={handleChange}>\n                    {location.label}\n                </label>\n            ))}\n        </div>\n    );\n}\n\nfunction ConfigCard(props) {\n    const handleSelect = evt => {\n        props.onSelectConfig(evt.currentTarget.dataset.config);\n    };\n    let isSideBar = false, price = null, label = null;\n    if (props.isSideBar) {\n        isSideBar = true;\n        price = props.total;\n        label = props.label;\n    } else {\n        price = props.config.price;\n    }\n\n    return (\n        <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">{props.config.name}</div>\n\n            <div className=\"panel-body\">\n                {props.config.descr}\n                <br/>\n                <br/>\n                <input type=\"hidden\" id=\"tariff_id\" name=\"tariff_id\"\n                       value={props.config[`${props.location}_tariff_id`]}/>\n                <ul className=\"list-unstyled\">\n                    {(label) ? (<li><b><FormattedMessage id='label' defaultMessage=\"Label\"/>: </b> <span>{label}</span>\n                    </li>) : ''}\n                    <SelectedOption options={props.imageOptions} input={props.osimage} label='osimage'/>\n                    <SelectedOption options={props.administrationOptions} input={props.administration}\n                                    label='administration'/>\n                    <SelectedOption options={props.softpackOptions} input={props.softpack} label='softpack'/>\n                    <Software {...props}/>\n                </ul>\n                <hr/>\n                <div className=\"text-center text-muted\">{price.toLocaleString(props.language, {\n                    style: 'currency',\n                    currency: props.config.currency\n                })}</div>\n            </div>\n            <div className=\"panel-footer\">\n                {isSideBar ? (\n                    <button type=\"submit\" className=\"btn btn-success btn-block\"\n                            disabled={!props.isOrderActive}><FormattedMessage id='order' defaultMessage='Order'/>\n                    </button>\n                ) : (\n                    <button type=\"button\" className=\"btn btn-primary btn-block\"\n                            data-config={props.config.id}\n                            onClick={handleSelect}><FormattedMessage id='select' defaultMessage='Select'/></button>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction Software({softpack, currentImage}) {\n    if (softpack === null || softpack === 'clear') {\n        return null;\n    }\n    const software = describeSoftpack(currentImage.softpack);\n\n    return (\n        <li>\n            <b><FormattedMessage id='software' defaultMessage=\"Software\"/>:</b> <span>{software}</span>\n        </li>\n    );\n}\n\nfunction RadioList({current, ...props}) {\n    const handleChange = evt => {\n        props.onInputChange(evt.target.value)\n    };\n    const isCurrentOptionDisabled = props.options.map((option) => {\n        return option.disabled ? null : option.name\n    }).indexOf(current) === -1;\n    if (isCurrentOptionDisabled) {\n        current = null;\n    }\n    if (current === null) {\n        current = props.options.reduce((accumulator, option) => {\n            return accumulator === null && !option.disabled\n                ? option.name\n                : accumulator;\n        }, null);\n        useEffect(() => {\n            props.onInputChange(current);\n        });\n    }\n    const options = props.options.map((option, idx) => (\n        <div className={'radio radio-' + props.label + (option.disabled === true ? ' disabled' : '')} key={idx}>\n            <label>\n                <input type=\"radio\" name={props.label.toLowerCase()} value={option.name} onChange={handleChange}\n                       checked={current === option.name}\n                       disabled={(option.disabled === true) ? 'disabled' : ''}/>\n                {option.title}\n            </label>\n        </div>\n    ));\n\n    return (\n        <div className=\"form-group\">\n            <label><FormattedMessage id={props.label} defaultMessage={capitalize(props.label)}/></label>\n            {options}\n        </div>\n    );\n}\n\n/**\n * @return {null}\n */\nfunction SelectedOption({input, options, label}) {\n    if (!input) {\n        return null;\n    }\n    const item = options.find(item => item.name === input);\n\n    return (\n        <li>\n            <b><FormattedMessage id={label} defaultMessage={capitalize(label)}/>: </b> <span>{item.title}</span>\n        </li>\n    );\n}\n\nexport default App\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {addLocaleData, IntlProvider} from 'react-intl';\nimport ru from 'react-intl/locale-data/ru';\nimport en from 'react-intl/locale-data/en';\nimport App from './App'\n\naddLocaleData([...en, ...ru]);\n\n// window.hipanel_order_server = {\n//     initialStates: {\n//         action: 'http://local.hipanel-demo.hipanel.com/server/order/add-to-cart-dedicated',\n//         location: 'us',\n//         language: 'en',\n//     },\n//     token: {\n//         name: '_csrf',\n//         value: '123',\n//     },\n//     configs: {\n//         nl: [\n//             {\n//                 id: 1,\n//                 name: 'Single Start',\n//                 descr: '1 х W-2123 CPU / 16 GB DDR4 / 2 х 2 TB HDD',\n//                 price: 127,\n//                 currency: 'EUR',\n//                 nl_tariff_id: '123',\n//                 us_tariff_id: '321',\n//             },\n//         ],\n//         us: [\n//             {\n//                 id: 2,\n//                 name: 'Single Business',\n//                 descr: '1 х W-2125 CPU / 32 GB DDR4 / 2 х 2 TB HDD',\n//                 price: 175,\n//                 currency: 'USD',\n//                 nl_tariff_id: '123',\n//                 us_tariff_id: '321',\n//             },\n//             {\n//                 id: 3,\n//                 name: 'Single Advanced',\n//                 descr: '1 х W-2133 CPU / 64 GB DDR4 / 2 х 2 TB HDD',\n//                 price: 202,\n//                 currency: 'USD',\n//                 nl_tariff_id: '123',\n//                 us_tariff_id: '321',\n//             },\n//         ],\n//     },\n//     osImages: {\n//         ubuntu_1810_clean: {\n//             name: \"ubuntu_1810_clean\",\n//             title: \"Ubuntu 18.10 Clean installation (demo)\",\n//             os: \"Ubuntu\",\n//             version: 18.1,\n//             panel: null,\n//             deprecated: false,\n//             softpack: null,\n//             osimage: \"ubuntu_1810_clean\"\n//         },\n//         ubuntu_1804_lemp: {\n//             name: \"ubuntu_1804_lemp\",\n//             title: \"Ubuntu 18.04 LTS x64 with LEMP stack (demo)\",\n//             os: \"Ubuntu\",\n//             version: \"18.04 LTS\",\n//             panel: null,\n//             deprecated: false,\n//             softpack: {\n//                 name: \"lemp\",\n//                 panel: null,\n//                 packages: [\n//                     {\n//                         name: \"Nginx\",\n//                         version: \"1.15.0\"\n//                     },\n//                     {\n//                         name: \"MySQL\",\n//                         version: 8\n//                     },\n//                     {\n//                         name: \"PHP-FPM\",\n//                         version: \"7.3.0\"\n//                     }\n//                 ]\n//             },\n//             osimage: \"ubuntu_1804_lemp\"\n//         },\n//         centos_7_clean: {\n//             name: \"centos_7_clean\",\n//             title: \"CentOS 7 (demo)\",\n//             os: \"CentOS\",\n//             version: 7,\n//             panel: null,\n//             deprecated: false,\n//             softpack: null,\n//             osimage: \"centos_7_clean\"\n//         },\n//         freebsd_11_lamp: {\n//             name: \"freebsd_11_lamp\",\n//             title: \"FreeBSD 11 LEMP stack (demo)\",\n//             os: \"FreeBSD\",\n//             version: 11,\n//             panel: null,\n//             deprecated: false,\n//             softpack: {\n//                 name: \"lamp\",\n//                 panel: \"HiPanel\",\n//                 packages: [\n//                     {\n//                         name: \"Apache\",\n//                         version: 2.2\n//                     },\n//                     {\n//                         name: \"MySQL\",\n//                         version: 8\n//                     },\n//                     {\n//                         name: \"PHP-FPM\",\n//                         version: \"7.3.0\"\n//                     }\n//                 ]\n//             },\n//             osimage: \"freebsd_11_lamp\"\n//         },\n//         windows_10_clean: {\n//             name: \"windows_10_clean\",\n//             title: \"Windows 10 (demo)\",\n//             os: \"Windows\",\n//             version: 10.1,\n//             panel: null,\n//             deprecated: false,\n//             softpack: null,\n//             osimage: \"windows_10_clean\"\n//         },\n//         centos_6_lamp: {\n//             name: \"centos_6_lamp\",\n//             title: \"CentOS 6 x64 with LAMP stack (demo)\",\n//             os: \"CentOS\",\n//             version: 6,\n//             panel: null,\n//             deprecated: true,\n//             softpack: {\n//                 name: \"lamp\",\n//                 panel: null,\n//                 packages: [\n//                     {\n//                         name: \"Apache\",\n//                         version: \"2.0.1\"\n//                     },\n//                     {\n//                         name: \"MySQL\",\n//                         version: 5.5\n//                     },\n//                     {\n//                         name: \"PHP-FPM\",\n//                         version: \"5.6.0\"\n//                     }\n//                 ]\n//             },\n//             osimage: \"centos_6_lamp\"\n//         }\n//     }\n// };\n\nconst messages = {\n    'en': {\n        'text.header': 'Make your server even more powerful',\n        'text.paragraph': 'Select the technical details and the type of maintenance of your dedicated server. ' +\n            'Immediately after placing the order, we will contact you to confirm it and connect your project to the service.',\n    },\n    'ru': {\n        'text.header': 'Сделайте ваш сервер еще мощнее',\n        'text.paragraph': 'Выберите технические детали и тип обслуживания выделенного сервера. ' +\n            'Сразу после размещения заказа мы свяжемся с вами для подтверждения и подключения вашего проекта к услуге.',\n\n        'nl': 'Нидерланды',\n        'us': 'США',\n        'label': \"Заметка\",\n        'administration': 'Администрирование',\n        'softpack': 'Софт',\n        'osimage': 'Образ',\n        'order': 'Заказать',\n        'select': 'Выбрать',\n        'select_locaction': 'Выбирите локацию',\n        'no_configurations': 'Нет конфигураций',\n        'software': 'Программное обеспечение'\n    }\n};\n\nrender(\n    <IntlProvider locale={window.hipanel_order_server.initialStates.language}\n                  messages={messages[window.hipanel_order_server.initialStates.language]}>\n        <App {...window.hipanel_order_server}/>\n    </IntlProvider>,\n    document.querySelector('#server-order-app')\n);"],"sourceRoot":""}