{"version":3,"sources":["webpack:///./src/App.js","webpack:///./src/index.js"],"names":["locationOptions","name","label","react_default","a","createElement","index_es","id","defaultMessage","className","htmlFor","App","props","_classCallCheck","this","_this","_possibleConstructorReturn","_Component","call","state","Object","assign","actions","location","configId","osimage","administration","softpack","isOrderActive","total","initialStates","handleLocationChange","setState","handleSelectConfig","configOptions","find","conf","parseInt","price","handleImage","value","handleAdministration","currentState","handleSoftPack","handleLabelChange","evt","target","render","_this2","main","orderPanel","length","map","config","idx","key","ConfigCard","_extends","onSelectConfig","fullConfig","item","_ref3","_ref4","_ref5","type","onChange","RadioList","options","imageOptions","onInputChange","administrationOptions","softpackOptions","isSideBar","currency","language","action","method","LocationSwitcher","locations","currentLocation","onLocationChange","loc","style","marginTop","Component","handleChange","currentTarget","dataset","data-location","onClick","descr","_ref6","_ref7","_ref8","SelectedOption","input","_ref9","toLocaleString","disabled","_ref10","data-config","_ref11","option","toLowerCase","toUpperCase","_ref12","addLocaleData","en","ru","locale","window","hipanel_order_server","messages","text.header","text.paragraph","nl","us","order","select","select_locaction","no_configurations","src_App","document","querySelector"],"mappings":"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","file":"app.2d9d7078.js","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react'\nimport {FormattedMessage} from 'react-intl';\n\nconst locationOptions = [\n    {\n        name: 'nl',\n        label: <FormattedMessage id='nl' defaultMessage='Netherlands'/>\n    },\n    {\n        name: 'us',\n        label: <FormattedMessage id='us' defaultMessage='USA'/>\n    },\n];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = Object.assign({}, {\n            actions: null,\n            location: 'usa',\n            configId: null,\n            label: '',\n            osimage: null,\n            administration: null,\n            softpack: null,\n            isOrderActive: false,\n            total: 0\n        }, props.initialStates);\n    }\n\n    handleLocationChange(location) {\n        this.setState({\n            location: location,\n            configId: null,\n            label: '',\n            osimage: null,\n            administration: null,\n            softpack: null,\n            isOrderActive: false,\n        });\n    }\n\n    handleSelectConfig(configId) {\n        this.setState({\n            configId: configId,\n            label: '',\n            osimage: null,\n            administration: null,\n            softpack: null,\n            isOrderActive: false,\n            total: this.props.configOptions[this.state.location].find(conf => parseInt(conf.id) === parseInt(configId)).price,\n        });\n    }\n\n    handleImage(value) {\n        this.setState({osimage: value});\n    }\n\n    handleAdministration(value) {\n        let total = this.state.total;\n        const currentState = this.state.administration;\n        if (value === 'managed' && (currentState === 'unmanaged' || currentState == null)) {\n            total += 100;\n        } else if (value === 'unmanaged' && currentState === 'managed') {\n            total -= 100;\n        }\n        this.setState({\n            administration: value,\n            total: total\n        });\n    }\n\n    handleSoftPack(value) {\n        this.setState({softpack: value});\n    }\n\n    handleLabelChange(evt) {\n        this.setState({label: evt.target.value});\n    }\n\n    render() {\n        let main = (<div className=\"alert alert-warning text-center\"><FormattedMessage id='select_locaction'\n                                                                                       defaultMessage='Select location'/>\n            </div>), orderPanel = '',\n            location = this.state.location, configId = this.state.configId,\n            sideMargin = {marginTop: '1em'}, isOrderActive = this.state.isOrderActive;\n\n        if (location) {\n            if (this.props.configOptions[location].length > 0) {\n                main = (this.props.configOptions[location].map((config, idx) => (\n                    <div className=\"col-md-4\" key={idx}>\n                        <ConfigCard config={config} {...this.state} location={location}\n                                    onSelectConfig={evt => this.handleSelectConfig(evt)}/>\n                    </div>\n                )));\n            } else {\n                main = (<div className=\"alert alert-warning text-center\">\n                    <FormattedMessage id='no_configurations' defaultMessage='No configurations'/>\n                </div>);\n            }\n        }\n\n        if (this.state.osimage && this.state.administration && this.state.softpack) {\n            isOrderActive = true;\n        }\n\n        if (location && configId) {\n            const fullConfig = this.props.configOptions[location].find(item => parseInt(item.id) === parseInt(configId));\n            main = <fieldset className=\"col-md-9\">\n\n                <h3>\n                    <FormattedMessage id='text.header'/>\n                </h3>\n                <p>\n                    <FormattedMessage id='text.paragraph'/>\n                </p>\n\n                <div\n                    className=\"row\">\n                    <div\n                        className=\"col-md-9\">\n                        <div\n                            className=\"form-group\">\n                            <label\n                                htmlFor=\"label\"><FormattedMessage id='label'\n                                                                               defaultMessage='Label'/></label>\n                            <input type=\"text\" className=\"form-control\" name='label' id=\"label\"\n                                   value={this.state.value}\n                                   onChange={evt => this.handleLabelChange(evt)}/>\n                        </div>\n                    </div>\n                </div>\n\n                <input type=\"hidden\" id=\"object_id\" name=\"object_id\" value={configId}/>\n\n                <RadioList label=\"osimage\" options={this.props.imageOptions}\n                           onInputChange={evt => this.handleImage(evt)}/>\n\n                <RadioList label=\"administration\" options={this.props.administrationOptions}\n                           onInputChange={evt => this.handleAdministration(evt)}/>\n\n                <RadioList label=\"softpack\" options={this.props.softpackOptions}\n                           onInputChange={evt => this.handleSoftPack(evt)}/>\n\n            </fieldset>;\n            orderPanel = <ConfigCard config={fullConfig} isSideBar={true}\n                                     isOrderActive={isOrderActive} currency={this.state.currency}\n                                     language={this.state.language} {...this.props}\n                                     label={this.state.label}\n                                     osimage={this.state.osimage}\n                                     administration={this.state.administration}\n                                     softpack={this.state.softpack}\n                                     location={location}\n                                     total={this.state.total}/>;\n        }\n\n        return (\n            <form action={this.state.action} method=\"POST\">\n                <div className=\"row\">\n                    <div className=\"col-md-9\">\n                        <div className=\"row\">\n                            {main}\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <LocationSwitcher locations={locationOptions} currentLocation={this.state.location}\n                                                  onLocationChange={loc => this.handleLocationChange(loc)}/>\n                            </div>\n                            <div className=\"col-md-12\" style={sideMargin}>\n                                {orderPanel}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction LocationSwitcher(props) {\n    const handleChange = evt => {\n        props.onLocationChange(evt.currentTarget.dataset.location);\n    };\n\n    return (\n        <div className=\"btn-group btn-group-justified\">\n            {props.locations.map((location, idx) => (\n                <label className={\"btn btn-default \" + (location.name === props.currentLocation ? 'active' : '')}\n                       key={idx} data-location={location.name} onClick={handleChange}>\n                    {location.label}\n                </label>\n            ))}\n        </div>\n    );\n}\n\nfunction ConfigCard(props) {\n    const handleSelect = evt => {\n        props.onSelectConfig(evt.currentTarget.dataset.config);\n    };\n    let isSideBar = false, price = null, label = null;\n    if (props.isSideBar) {\n        isSideBar = true;\n        price = props.total;\n        label = props.label;\n    } else {\n        price = props.config.price;\n    }\n\n    return (\n        <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">{props.config.name}</div>\n\n            <div className=\"panel-body\">\n                {props.config.descr}\n                <br/>\n                <br/>\n                <input type=\"hidden\" id=\"tariff_id\" name=\"tariff_id\" value={props.config[`${props.location}_tariff_id`]}/>\n                <ul className=\"list-unstyled\">\n                    {(label) ? (<li><b><FormattedMessage id='label' defaultMessage=\"Label\"/>: </b> <span>{label}</span>\n                    </li>) : ''}\n                    <SelectedOption options={props.imageOptions} input={props.osimage} label='osimage'/>\n                    <SelectedOption options={props.administrationOptions} input={props.administration}\n                                    label='administration'/>\n                    <SelectedOption options={props.softpackOptions} input={props.softpack} label='softpack'/>\n                </ul>\n                <hr/>\n                <div className=\"text-center text-muted\">{price.toLocaleString(props.language, {\n                    style: 'currency',\n                    currency: props.config.currency\n                })}</div>\n            </div>\n            <div className=\"panel-footer\">\n                {isSideBar ? (\n                    <button type=\"submit\" className=\"btn btn-success btn-block\"\n                            disabled={!props.isOrderActive}><FormattedMessage id='order' defaultMessage='Order'/>\n                    </button>\n                ) : (\n                    <button type=\"button\" className=\"btn btn-primary btn-block\"\n                            data-config={props.config.id}\n                            onClick={handleSelect}><FormattedMessage id='select' defaultMessage='Select'/></button>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction RadioList(props) {\n    const handleChange = evt => {\n        props.onInputChange(evt.target.value)\n    };\n\n    const options = props.options.map((option, idx) => (\n        <div className=\"radio\" key={idx}>\n            <label><input type=\"radio\" name={props.label.toLowerCase()} value={option.name}\n                          onChange={handleChange}/>{option.label}</label>\n        </div>\n    ));\n\n    return (\n        <div className=\"form-group\">\n            <label><FormattedMessage id={props.label} defaultMessage={props.label.toUpperCase()}/></label>\n            {options}\n        </div>\n    );\n}\n\n/**\n * @return {null}\n */\nfunction SelectedOption({input, options, label}) {\n    if (!input) {\n        return null;\n    }\n    const item = options.find(item => item.name === input);\n\n    return (\n        <li>\n            <b><FormattedMessage id={label} defaultMessage={label.toUpperCase()}/>: </b> <span>{item.label}</span>\n        </li>\n    );\n}\n\nexport default App\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {addLocaleData, IntlProvider} from 'react-intl';\nimport ru from 'react-intl/locale-data/ru';\nimport en from 'react-intl/locale-data/en';\nimport App from './App'\n\naddLocaleData([...en, ...ru]);\n\n// window.hipanel_order_server = {\n//     initialStates: {\n//         action: 'http://local.hipanel-demo.hipanel.com/server/order/add-to-cart-dedicated',\n//         location: 'us',\n//         language: 'ru',\n//     },\n//     configOptions: {\n//         nl: [\n//             {\n//                 id: 1,\n//                 name: 'Single Start',\n//                 descr: '1 х W-2123 CPU / 16 GB DDR4 / 2 х 2 TB HDD',\n//                 price: 127,\n//                 currency: 'EUR',\n//                 nl_tariff_id: '123',\n//                 us_tariff_id: '321',\n//             },\n//         ],\n//         us: [\n//             {\n//                 id: 2,\n//                 name: 'Single Business',\n//                 descr: '1 х W-2125 CPU / 32 GB DDR4 / 2 х 2 TB HDD',\n//                 price: 175,\n//                 currency: 'USD',\n//                 nl_tariff_id: '123',\n//                 us_tariff_id: '321',\n//             },\n//             {\n//                 id: 3,\n//                 name: 'Single Advanced',\n//                 descr: '1 х W-2133 CPU / 64 GB DDR4 / 2 х 2 TB HDD',\n//                 price: 202,\n//                 currency: 'USD',\n//                 nl_tariff_id: '123',\n//                 us_tariff_id: '321',\n//             },\n//         ],\n//     },\n//     imageOptions: [\n//         {\n//             name: 'centos',\n//             label: 'Centos zz.zz'\n//         },\n//         {\n//             name: 'ubuntu',\n//             label: 'Ubuntu vv.vv'\n//         },\n//     ],\n//     administrationOptions: [\n//         {\n//             name: 'managed',\n//             label: 'Managed'\n//         },\n//         {\n//             name: 'unmanaged',\n//             label: 'Unmanaged'\n//         },\n//     ],\n//     softpackOptions: [\n//         {\n//             name: 'hipanel',\n//             label: 'HiPanel (fully free)'\n//         },\n//         {\n//             name: 'fresh',\n//             label: 'Fresh (root)'\n//         },\n//         {\n//             name: 'lamp',\n//             label: 'LAMP (root)'\n//         },\n//         {\n//             name: 'branini',\n//             label: 'Braini CP (Fully free)'\n//         },\n//         {\n//             name: 'cpanel',\n//             label: 'cPanel (Trial)'\n//         },\n//         {\n//             name: 'sipmanager',\n//             label: ' ISPManager (Trial)'\n//         },\n//     ]\n// };\n\nconst messages = {\n    'en': {\n        'text.header': 'Make your server even more powerful',\n        'text.paragraph': 'Select the technical details and the type of maintenance of your dedicated server. ' +\n            'Immediately after placing the order, we will contact you to confirm it and connect your project to the service.',\n    },\n    'ru': {\n        'text.header': 'Сделайте ваш сервер еще мощнее',\n        'text.paragraph': 'Выберите технические детали и тип обслуживания выделенного сервера. ' +\n            'Сразу после размещения заказа мы свяжемся с вами для подтверждения и подключения вашего проекта к услуге.',\n\n        'nl': 'Нидерланды',\n        'us': 'США',\n        'label': \"Заметка\",\n        'administration': 'Администрирование',\n        'softpack': 'Софт',\n        'osimage': 'Образ',\n        'order': 'Заказать',\n        'select': 'Выбрать',\n        'select_locaction': 'Выбирите локацию',\n        'no_configurations': 'Нет конфигураций',\n    }\n};\n\nrender(\n    <IntlProvider locale={window.hipanel_order_server.initialStates.language}\n                  messages={messages[window.hipanel_order_server.initialStates.language]}>\n        <App {...window.hipanel_order_server}/>\n    </IntlProvider>,\n    document.querySelector('#server-order-app')\n);"],"sourceRoot":""}